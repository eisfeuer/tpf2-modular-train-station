local Transf = require("transf")

function data()
    return {
        cost = {
            price = 10000,
        },
        category = {
            categories = { "decoration", },
        },
        description = {
            name = _("Bench"),
		    description = _("Small main building with street access for passenger stations."),
		    icon = "ui/construction/station/rail/motras/decoration_bench_era_c.tga"
        }, 
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        type = "motras_decoration_asset",
        order = {
            value = 1,
        },
        metadata = {
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            local asset = result.motras:register(slotId)
            local gridElement = asset:getParentGridElement()
            
            asset:handle(function ()
                if asset:getId() >= 41 and asset:getId() <= 44 then
                    table.insert(result.models, {
                        id = "station/rail/asset/era_c_double_chair.mdl",
                        transf = Transf.mul(transform, Transf.rotZTransl(math.pi / 2, {x = 0, y = 0, z = -1}))
                    })   
                elseif not gridElement:hasNeighborTop() and gridElement:getNeighborBottom():isTrack() then
                    table.insert(result.models, {
                        id = "station/rail/asset/era_c_single_chair.mdl",
                        transf = Transf.mul(transform, Transf.rotZTransl(math.pi / 2, {x = 0, y = 2.1, z = -1}))
                    })
                elseif not gridElement:hasNeighborBottom() and gridElement:getNeighborTop():isTrack() then
                    table.insert(result.models, {
                        id = "station/rail/asset/era_c_single_chair.mdl",
                        transf = Transf.mul(transform, Transf.rotZTransl(-math.pi / 2, {x = 0, y = -2.1, z = -1}))
                    })
                elseif gridElement:hasAsset(asset:getId() - 8) then
                    table.insert(result.models, {
                        id = "station/rail/asset/era_c_single_chair.mdl",
                        transf = Transf.mul(transform, Transf.rotZTransl(-math.pi / 2, {x = 0, y = 0.4, z = -1}))
                    })  
                elseif gridElement:getNeighborTop():hasAsset(asset:getId() - 8) then
                    table.insert(result.models, {
                        id = "station/rail/asset/era_c_single_chair.mdl",
                        transf = Transf.mul(transform, Transf.rotZTransl(math.pi / 2, {x = 0, y = -0.4, z = -1}))
                    }) 
                else
                    table.insert(result.models, {
                        id = "station/rail/asset/era_c_double_chair.mdl",
                        transf = Transf.mul(transform, Transf.rotZTransl(math.pi / 2, {x = 0, y = 0, z = -1}))
                    })    
                end
            end)


        end,
        getModelsFn = function()
            return {
                { 
                    id = "station/rail/asset/era_c_double_chair.mdl",
                    transf = {
                        0, -1, 0, 0,
                        1, 0, 0, 0,
                        0, 0, 1, 0,
                        0, 0, 0, 1
                    },
                },
            }
        end
    }
end