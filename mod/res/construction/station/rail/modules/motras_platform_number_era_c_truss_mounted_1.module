local Transf = require("transf")

local function addTopPlatformNumber(result, transform)
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = 0.0, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = 0.0}
        ))
    })
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = 0.0, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = -0.2}
        ))
    })
    table.insert(result.models, {
        id = "station/rail/motras/platform_number_sign_era_c.mdl",
        transf = Transf.mul(transform, Transf.rotZTransl(math.pi / 2, {x = 0.0, y = 0.7, z = -0.1}))
    })
end

local function addBottomPlatformNumber(result, transform)
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = math.pi, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = 0.0}
        ))
    })
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = math.pi, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = -0.2}
        ))
    })
    table.insert(result.models, {
        id = "station/rail/motras/platform_number_sign_era_c.mdl",
        transf = Transf.mul(transform, Transf.rotZTransl(-math.pi / 2, {x = 0.0, y = -0.7, z = -0.1}))
    })
end

function data()
    return {
        cost = {
            price = 10000,
        },
        category = {
            categories = { "decoration", },
        },
        description = {
            name = _("platform_number_sign"),
		    description = _("truss_mountable"),
		    icon = "ui/construction/station/rail/motras/decoration_clock_ceiling_mounted_era_c.tga"
        }, 
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        type = "motras_decoration_truss_mounted",
        order = {
            value = 1,
        },
        metadata = {
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            local decoration = result.motras:register(slotId)

            decoration:handle(function ()
                local gridElement = decoration:getParentGridElement()
                local hasTrackTop = gridElement:getNeighborTop():isTrack()
                local hasTrackBottom = gridElement:getNeighborBottom():isTrack()

                if decoration:getAssetId() == 46 then
                    addTopPlatformNumber(result, transform)
                    addBottomPlatformNumber(result, transform)
                end
                if hasTrackTop and not hasTrackBottom then
                    addTopPlatformNumber(result, transform)
                elseif hasTrackBottom and not hasTrackTop then
                    addBottomPlatformNumber(result, transform)
                else
                    addTopPlatformNumber(result, transform)
                    addBottomPlatformNumber(result, transform)
                end
            end)
        end,
        getModelsFn = function()
            return {
                { 
                    id = "station/rail/asset/era_c_street_pillar.mdl",
                    transf = {
                        0.5, 0, 0, 0,
                        0, -0.5, 0, 0,
                        0, 0, -1.0, 0,
                        0, 0, 0, 1
                    },
                }, { 
                    id = "station/rail/motras/platform_number_sign_era_c.mdl",
                    transf = {
                        0, -1.0, 0, 0,
                        1.0, 0, 0, 0,
                        0, 0, 1.0, 0,
                        0, 0, -0.8, 1
                    },
                },
            }
        end
    }
end