local Transf = require("transf")
local ModelUtils = require("motras_modelutils")

local function addTopPlatformNumber(result, transform, label, tag)
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = 0.0, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = 0.0}
        )),
        tag = tag
    })
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = 0.0, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = -0.2}
        )),
        tag = tag
    })
    ModelUtils.addLabeledModel(
        result,
        "station/rail/motras/platform_number_sign_era_c.mdl",
        {label, label},
        Transf.mul(transform, Transf.rotZTransl(math.pi / 2, {x = 0.0, y = 0.7, z = -0.1})),
        tag
    )
end

local function addBottomPlatformNumber(result, transform, label, tag)
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = math.pi, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = 0.0}
        )),
        tag = tag
    })
    table.insert(result.models, {
        id = "station/rail/asset/era_c_street_pillar.mdl",
        transf = Transf.mul(transform, Transf.scaleRotZYXTransl(
            {x = 0.5, y = -0.5, z = -1.0},
            {x = math.pi, y = 0.0, z = math.pi / 2},
            {x = 0.0, y = 0.0, z = -0.2}
        )),
        tag = tag
    })
    ModelUtils.addLabeledModel(
        result,
        "station/rail/motras/platform_number_sign_era_c.mdl",
        {label, label},
        Transf.mul(transform, Transf.rotZTransl(-math.pi / 2, {x = 0.0, y = -0.7, z = -0.1})),
        tag
    )
end

function data()
    return {
        cost = {
            price = 0,
        },
        category = {
            categories = { "decoration", },
        },
        description = {
            name = _("platform_number_sign"),
		    description = _("truss_mountable"),
		    icon = "ui/construction/station/rail/motras/decoration_platform_numbers_truss_mounted_2_era_c.tga"
        }, 
        availability = {
            yearFrom = 1980,
            yearTo = 0
        },
        type = "motras_decoration_truss_mounted",
        order = {
            value = 49002,
        },
        metadata = {
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            local decoration = result.motras:register(slotId)

            decoration:handle(function ()
                local gridElement = decoration:getParentGridElement()

                local lableForBottomTrack = ''
                local lableForTopTrack = ''

                if decoration:getAssetId() == 34 or decoration:getAssetId() == 46 then
                    local bottomTrack = gridElement:getGrid():get(decoration:getGridX(), decoration:getGridY() - 2)
                    local topTrack = gridElement:getNeighborTop()

                    if bottomTrack:isTrack() then
                        lableForBottomTrack = bottomTrack:getDisplayedId()
                    end
                    if topTrack:isTrack() then
                        lableForTopTrack = topTrack:getDisplayedId()
                    end
                else
                    local bottomTrack = gridElement:getNeighborBottom()
                    local topTrack = gridElement:getNeighborTop()

                    if bottomTrack:isTrack() then
                        lableForBottomTrack = bottomTrack:getDisplayedId()
                    end
                    if topTrack:isTrack() then
                        lableForTopTrack = topTrack:getDisplayedId()
                    end
                end

                local hasTrackTop = gridElement:getNeighborTop():isTrack()
                local hasTrackBottom = gridElement:getNeighborBottom():isTrack()

                if decoration:getAssetId() == 46 then
                    addTopPlatformNumber(result, transform, lableForTopTrack, tag)
                    addBottomPlatformNumber(result, transform, lableForBottomTrack, tag)
                end
                if hasTrackTop and not hasTrackBottom then
                    addTopPlatformNumber(result, transform, lableForTopTrack, tag)
                elseif hasTrackBottom and not hasTrackTop then
                    addBottomPlatformNumber(result, transform, lableForBottomTrack, tag)
                else
                    addTopPlatformNumber(result, transform, lableForTopTrack, tag)
                    addBottomPlatformNumber(result, transform, lableForBottomTrack, tag)
                end
            end)
        end,
        getModelsFn = function()
            return {
                { 
                    id = "station/rail/asset/era_c_street_pillar.mdl",
                    transf = {
                        0.5, 0, 0, 0,
                        0, 0, -0.5, 0,
                        0, 1, 0, 0,
                        0, 0, 0.1, 1
                    },
                }, { 
                    id = "station/rail/asset/era_c_street_pillar.mdl",
                    transf = {
                        0.5, 0, 0, 0,
                        0, 0, -0.5, 0,
                        0, 1, 0, 0,
                        0, 0, -0.1, 1
                    },
                }, { 
                    id = "station/rail/motras/platform_number_sign_era_c.mdl",
                    transf = {
                        0, -1, 0, 0,
                        1, 0, 0, 0,
                        0, 0, 1, 0,
                        0, 0.7, 0, 1
                    },
                },
            }
        end
    }
end