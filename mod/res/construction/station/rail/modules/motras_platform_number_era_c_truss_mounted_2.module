local Transf = require("transf")

function data()
    return {
        cost = {
            price = 10000,
        },
        category = {
            categories = { "decoration", },
        },
        description = {
            name = _("Small main building"),
		    description = _("Small main building with street access for passenger stations."),
		    icon = "ui/construction/station/rail/motras/decoration_platform_numbers_truss_mounted_era_c.tga"
        }, 
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        type = "motras_decoration_truss_mounted",
        order = {
            value = 1,
        },
        metadata = {
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            local decoration = result.motras:register(slotId)

            decoration:handle(function ()
                local lableForBottomTrack = ''
                local lableForTopTrack = ''

                if decoration:getAssetId() == 34 or decoration:getAssetId() == 46 then
                    local bottomTrack = decoration:getParentGridElement():getGrid():get(decoration:getGridX(), decoration:getGridY() - 2)
                    local topTrack = decoration:getParentGridElement():getNeighborTop()

                    if bottomTrack:isTrack() then
                        lableForBottomTrack = bottomTrack:getDisplayedId()
                    end
                    if topTrack:isTrack() then
                        lableForTopTrack = topTrack:getDisplayedId()
                    end
                else
                    local bottomTrack = decoration:getParentGridElement():getNeighborBottom()
                    local topTrack = decoration:getParentGridElement():getNeighborTop()

                    if bottomTrack:isTrack() then
                        lableForBottomTrack = bottomTrack:getDisplayedId()
                    end
                    if topTrack:isTrack() then
                        lableForTopTrack = topTrack:getDisplayedId()
                    end
                end

                result.labelText[#result.models] = {lableForTopTrack, lableForTopTrack, lableForBottomTrack, lableForBottomTrack}
                table.insert(result.models, {
                    id = "station/rail/asset/era_c_perron_number.mdl",
                    transf = transform
                })
            end)
           -- result.labelText[#result.models] = {"1", "2", "3", "4"}
        end,
        getModelsFn = function()
            return {
                { 
                    id = "station/rail/asset/era_c_perron_number.mdl",
                    transf = {
                        1, 0, 0, 0,
                        0, 1, 0, 0,
                        0, 0, 1, 0,
                        0, 0, 0, 1
                    },
                }
            }
        end
    }
end