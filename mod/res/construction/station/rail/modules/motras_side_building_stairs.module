local ConstructionUtils = require('constructionutil')
local Box = require("motras_box")
local BuildingUtils = require('motras_buildingutils')
local Transf = require('transf')
local Vec3 = require('vec3')
local Stairway = require('motras_stairway')

function data()
    return {
        cost = {
            price = 700,
        },
        category = {
            categories = { "passenger buildings", },
        },
        description = {
            name = _("Side entrance"),
            description = _("Street access for passengers and cargo."),
            icon = "ui/construction/station/rail/modular_station/stairs.tga"
        }, 
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        type = "motras_building_platform40m_access",
        order = {
            value = 1,
        },
        metadata = {
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            local asset = result.motras:register(slotId)

            asset:handle(function ()
                local stairsTransformation = Transf.mul(transform, Transf.rotZTransl(math.pi, {x = 0, y = 7.5, z = 0.0}))

                BuildingUtils.makeLot(result, Box:new({ -6, 4, 0 }, { 6, 0, 4 }), stairsTransformation)

                local absolutePlatformHeight = asset:getParentGridElement():getAbsolutePlatformHeight()
                local stairway = Stairway:new{
                    height = absolutePlatformHeight,
                    stepWidth = 0.29,
                    stepModel = "station/rail/motras/stairs_step_10m.mdl"
                }

                stairway:addStepsToModels(result.models, stairsTransformation)
                stairway:addPathToModels(result.models, 0, stairsTransformation, 0, 3.5)

                table.insert(result.models, {
                    id = "station/rail/motras/platform_wall_side_entrance.mdl",
                    transf = Transf.mul(stairsTransformation, Transf.rotZTransl(math.pi, {x = 0, y = -2.5, z = absolutePlatformHeight}))
                })
            end)
        end,
        getModelsFn = function()
            return {
             
            }
        end
    }
end