function data()
    return {
        cost = {
            price = 18000,
        },
        category = {
            categories = { "tracks", },
        },
        description = {
            name = _("Custom Track 1"),
		    description = _("Standard tracks with limited speed capabilities."),
            icon = "ui/construction/station/rail/modular_station/track.tga"
        }, 
        availability = {
            yearFrom = 0,
            yearTo = commonapi and 0 or 1849
        },
        type = "motras_track",
        order = {
            value = 1,
        },
        metadata = {
            passenger = true,
            track = true,
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            local track = result.motras:register(slotId)
            track:handle(function (moduleResult)
                local posX = transform[13]
                local posY = transform[14]

                table.insert(moduleResult.edgeLists,  { 
                    type = "TRACK",
                    params = {
                        type =  result.motras:getCustomTrack1(),
                        catenary = false,
                    },
                    edges = {
                        { { posX - 18, posY, .0 }, {-2.0, .0, .0 } },
                        { { posX - 20, posY, .0 }, {-2.0, .0, .0 } },

                        { { posX - 2, posY, .0 }, {-16.0, .0, .0 } },
                        { { posX - 18, posY,  .0 }, {-16.0, .0, .0 } },

                        { { posX + 0, posY,  .0 }, {-2.0, .0, .0 } },
                        { { posX - 2, posY,  .0 }, {-2.0, .0, .0 } },

                        { { posX + 0, posY,  .0 }, {2.0, .0, .0 } },
                        { { posX + 2, posY,  .0 }, {2.0, .0, .0 } },

                        { { posX + 2, posY,  .0 }, {16.0, .0, .0 } },
                        { { posX + 18, posY, .0 }, {16.0, .0, .0 } },

                        { { posX + 18, posY, .0 }, {2.0, .0, .0 } },
                        { { posX + 20, posY, .0 }, {2.0, .0, .0 } }
                    },
                    snapNodes = { },
                    tag2nodes = { },
                })
            end)
        end,
        getModelsFn = function()
            return { }
        end
    }
end